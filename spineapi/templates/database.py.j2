"""
Database Connection and Session Management
"""
from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker

# Database configuration
{% if database == 'postgresql' %}
SQLALCHEMY_DATABASE_URL = "postgresql://user:password@localhost/{{ project_name }}"
{% else %}
SQLALCHEMY_DATABASE_URL = "sqlite:///./{{ project_name }}.db"
{% endif %}

engine = create_engine(
    SQLALCHEMY_DATABASE_URL,
    {% if database == 'sqlite' %}
    connect_args={"check_same_thread": False},
    {% endif %}
)

SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

Base = declarative_base()


def get_db():
    """
    Database dependency for FastAPI.
    
    Yields a database session and ensures it's properly closed.
    """
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()
